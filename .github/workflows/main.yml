name: MLflow CI - Diabetes Model

on:
  push:
    branches: [main]
    paths:
      - 'MLProject/**'
      - '.github/workflows/mlflow-ci.yml'
  workflow_dispatch:
    inputs:
      n_iter:
        description: 'Number of RandomizedSearchCV iterations'
        required: false
        default: '30'
      cv_folds:
        description: 'Number of CV folds'
        required: false
        default: '5'

jobs:
  retrain-model:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      # 1. Set up job
      - name: Set up job
        run: echo "Starting MLflow CI/CD Pipeline..."
      
      # 2. Run actions/checkout@v3
      - name: Run actions/checkout@v3
        uses: actions/checkout@v4
      
      # 3. Set up Python 3.12.7
      - name: Set up Python 3.12.7
        uses: actions/setup-python@v5
        with:
          python-version: '3.12.7'
      
      # 4. Check Env
      - name: Check Env
        run: |
          echo "Python version: $(python --version)"
          echo "Pip version: $(pip --version)"
          echo "Working directory: $(pwd)"
          ls -la MLProject/
      
      # 5. Install dependencies
      - name: Install dependencies
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          python-version: 3.12.7
          miniconda-version: "latest"
      
      # 6. Run mlflow project
      - name: Run mlflow project
        shell: bash -l {0}
        run: |
          pip install --upgrade pip
          pip install mlflow==2.19.0
          
          cd MLProject
          export MLFLOW_EXPERIMENT_NAME="Diabetes Prediction - Workflow CI"
          mlflow run . \
            -P data_path=diabetes_preprocessing.csv \
            -P scaler_path=scaler.pkl \
            -P n_iter=${{ github.event.inputs.n_iter || '30' }} \
            -P cv_folds=${{ github.event.inputs.cv_folds || '5' }}
      
      # 7. Get latest MLflow run_id
      - name: Get latest MLflow run_id
        id: get_run_id
        run: |
          # Cari run_id terbaru
          LATEST_RUN_ID=$(find MLProject/mlruns -type f -name "meta.yaml" -printf '%T@ %p\n' | sort -rn | head -1 | cut -d' ' -f2- | xargs dirname | xargs basename)
          echo "Latest Run ID: $LATEST_RUN_ID"
          echo "run_id=$LATEST_RUN_ID" >> $GITHUB_OUTPUT
          
          # Copy artifacts ke folder Artefak
          mkdir -p MLProject/Artefak
          LATEST_ARTIFACTS=$(find MLProject/mlruns -type d -name "artifacts" -printf '%T@ %p\n' | sort -rn | head -1 | cut -d' ' -f2-)
          
          if [ -z "$LATEST_ARTIFACTS" ]; then
            echo "Error: No artifacts found!"
            exit 1
          fi
          
          echo "Copying artifacts from: $LATEST_ARTIFACTS"
          cp -r "$LATEST_ARTIFACTS"/* MLProject/Artefak/
          
          echo "Artifacts copied successfully!"
          ls -lh MLProject/Artefak/
      
      # 8. Install Python dependencies
      - name: Install Python dependencies
        run: |
          echo "Python dependencies already installed via conda in step 6"
      
      # 9. Upload to GitHub
      - name: Upload to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: mlflow-model-artifacts
          path: MLProject/Artefak/
          retention-days: 30
          compression-level: 6
      
      # 10. Build Docker Model
      - name: Build Docker Model
        shell: bash -l {0}
        run: |
          cd MLProject
          
          # Find latest MLmodel
          MODEL_PATH=$(find mlruns -type f -name 'MLmodel' -printf '%T@ %p\n' | sort -rn | head -1 | cut -d' ' -f2- | xargs dirname)
          
          if [ -z "$MODEL_PATH" ]; then
            echo "Error: MLmodel not found!"
            exit 1
          fi
          
          echo "Building Docker image from model: $MODEL_PATH"
          mlflow models build-docker \
            -m "$MODEL_PATH" \
            -n ${{ secrets.DOCKERHUB_USERNAME }}/diabetes-model:latest
          
          echo "Docker image built successfully!"
      
      # 11. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # 12. Tag Docker image
      - name: Tag Docker image
        run: |
          echo "Docker image already tagged as diabetes-model:latest in step 10"
          docker images | grep diabetes-model || echo "Image not found in local registry"
      
      # 13. Push Docker image
      - name: Push Docker image
        run: |
          echo "Pushing Docker image to Docker Hub..."
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/diabetes-model:latest
          echo "Docker image pushed successfully!"
      
      # 14. Post Log in to Docker Hub
      - name: Post Log in to Docker Hub
        if: always()
        run: |
          echo "Docker Hub logout - automatic"
      
      # 15. Post Set up Python 3.12.7
      - name: Post Set up Python 3.12.7
        if: always()
        run: |
          echo "Python environment cleanup - automatic"
      
      # 16. Post Run actions/checkout@v3
      - name: Post Run actions/checkout@v3
        if: always()
        run: |
          echo "Checkout cleanup - automatic"
      
      # 17. Complete job
      - name: Complete job
        if: always()
        run: |
          echo "======================================"
          echo "MLflow CI/CD Pipeline Completed!"
          echo "======================================"
          echo "Model trained and evaluated"
          echo "Artifacts saved to: MLProject/Artefak/"
          echo "Artifacts uploaded to GitHub Actions"
          echo "Docker image: ${{ secrets.DOCKERHUB_USERNAME }}/diabetes-model:latest"
          echo "======================================"
      
      # Commit artifacts to repo (setelah semua selesai)
      - name: Commit and Push Artifacts
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add MLProject/Artefak
          git diff --cached --quiet || git commit -m "Add latest MLflow model artifacts [skip ci]"
          git push || echo "Nothing to push or push failed"
